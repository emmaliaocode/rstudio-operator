apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ name }}-rstudio
  labels:
    component: rstudio
    rstudio: {{ name }}
spec:
  serviceName: {{ name }}-rstudio
  replicas: 1
  selector:
    matchLabels:
      component: rstudio
      rstudio: {{ name }}
  template:
    metadata:
      labels:
        component: rstudio
        rstudio: {{ name }}
    spec:
      containers:
      - name: rstudio
        image: {{ spec.image }}
        imagePullPolicy: {{ spec.imagePullPolicy }}
        ports:
        - name: rstudio
          containerPort: 8787
        {% if spec.resources %}
        resources:
          {% if spec.resources.requests %}
          requests:
            cpu: {{ spec.resources.requests.cpu }}
            memory: {{ spec.resources.requests.memory }}
          {% endif %}
          {% if spec.resources.limits %}
          limits:
            cpu: {{ spec.resources.limits.cpu }}
            memory: {{ spec.resources.limits.memory }}
          {% endif %}
        {% endif %}
        {% if spec.loginSecret or spec.isRoot %}
        env:
        {% if spec.loginSecret %}
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ spec.loginSecret }}
              key: password
        {% endif %}
        {% if spec.isRoot %}
        - name: ROOT
          value: "{{ spec.isRoot | string | lower }}"
        {% endif %}
        {% endif %}
        volumeMounts: {{ spec.volumeMounts }}
      volumes: {{ spec.volumes }}
  {% if spec.storages %}
  volumeClaimTemplates:
  {% for item in spec.storages %}
  - metadata:
      name: {{ item.name }}
      labels:
        component: rstudio
        rstudio: {{ name }}
    spec:
      {% if item.storageClassName %}
      storageClassName: {{ item.storageClassName }}
      {% endif %}
      resources:
        requests:
          storage: {{ item.storageSize }}
      accessModes: {{ item.accessModes }}
  {% endfor %}
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  {% endif %}
